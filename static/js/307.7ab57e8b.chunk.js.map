{"version":3,"file":"static/js/307.7ab57e8b.chunk.js","mappings":"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","sources":["pages/Groups.tsx"],"sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\r\nimport Navigation from \"../navigation\";\r\nimport {selectedGroups} from \"../slices/groupsSlice\";\r\nimport {FC} from \"react\";\r\nimport {FaMinus} from \"react-icons/fa\";\r\nimport {MdOutlineGroups2} from \"react-icons/md\";\r\nimport {FaPersonCirclePlus} from \"react-icons/fa6\";\r\nimport {IoCalendarSharp} from \"react-icons/io5\";\r\nimport {setGroup} from \"../slices/selectedGroupSlice\";\r\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport {GroupLocal, User} from \"../Utilis/types\";\r\nimport logo from \"../assets/calendar.png\";\r\nimport {useNotifications} from \"reapop\";\r\nimport {arrayRemove, doc, updateDoc} from \"firebase/firestore\";\r\nimport {db} from \"../services/firebaseConfig\";\r\nimport {BsDot} from \"react-icons/bs\";\r\n\r\ntype GroupItemProps = {\r\n  name: string;\r\n  id: string;\r\n  users: User[];\r\n  isAdmin: boolean;\r\n  userId: string;\r\n};\r\n\r\nconst GroupItem: FC<GroupItemProps> = ({name, users, isAdmin, userId, id}) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const {notify} = useNotifications();\r\n\r\n  const trySetGorup = () => {\r\n    dispatch(setGroup({name, users, id}));\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const removeUserFromGroup = async (userUid: string) => {\r\n    if (isAdmin) {\r\n      try {\r\n        await updateDoc(doc(db, \"users\", userUid), {\r\n          groupId: false,\r\n        });\r\n\r\n        await updateDoc(doc(db, \"groups\", id), {\r\n          users: arrayRemove(userUid),\r\n        });\r\n\r\n        notify({\r\n          status: \"success\",\r\n          title: \"Pomyślnie usunięto pracownika z grupy\",\r\n        });\r\n      } catch (error) {\r\n        notify({\r\n          status: \"error\",\r\n          title: \"Nie udało się dodać pracownika\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-2 pr-1 pl-1 rounded-md flex flex-col w-full border-b-2 border-zinc-200 dark:border-zinc-900\">\r\n      <div className=\"flex items-center w-full justify-between gap-2\">\r\n        <h1 className=\"text-zinc-900 dark:text-zinc-100 font-semibold flex items-center gap-3\">\r\n          <MdOutlineGroups2 size={20} />\r\n          {name}\r\n        </h1>\r\n        <div className=\"flex items-center gap-2\">\r\n          {isAdmin && (\r\n            <div className=\"flex items-center gap-1 text-black  dark:text-zinc-300\">\r\n              <Link\r\n                to={\"/AssignPerson\"}\r\n                state={{\r\n                  previousLocation: location,\r\n                  group: {groupId: id, groupName: name},\r\n                }}\r\n              >\r\n                <div className=\"pr-2 pl-2 hover:text-green-600 cursor-pointer transition-colors\">\r\n                  <FaPersonCirclePlus size={19} />\r\n                </div>\r\n              </Link>\r\n              {/* <div className=\"pr-2 pl-2 hover:text-red-600 cursor-pointer transition-colors\">\r\n                <FaTrashCan size={16} />\r\n              </div> */}\r\n            </div>\r\n          )}\r\n          <div\r\n            onClick={trySetGorup}\r\n            className=\"flex items-center font-semibold gap-2 text-xs rounded-full bg-green-700 p-2 pr-3 pl-3 hover:opacity-70 cursor-pointer transition-opacity text-zinc-100\"\r\n          >\r\n            Zobacz\r\n            <IoCalendarSharp size={15} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"text-zinc-800 text-sm dark:text-zinc-300 mb-3\">\r\n        {users.length} osoba/y w grupie\r\n      </div>\r\n      {users.map(({nick, uid}, id) => (\r\n        <div\r\n          className=\"justify-between w-full hover:opacity-50 cursor-pointer transition-opacity dark:border-zinc-950 flex items-center pb-1 gap-1  \"\r\n          key={id}\r\n        >\r\n          <div\r\n            className={\r\n              userId === uid\r\n                ? \"text-green-600 font-bold flex items-center gap-2\"\r\n                : \"text-zinc-800 dark:text-zinc-100 flex items-center gap-2\"\r\n            }\r\n          >\r\n            <BsDot /> {nick}\r\n          </div>\r\n\r\n          {isAdmin && (\r\n            <div\r\n              onClick={() => removeUserFromGroup(uid)}\r\n              className=\"flex items-center gap-2 pr-2 pl-2 text-zinc-800 dark:text-zinc-200\"\r\n            >\r\n              <FaMinus size={12} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Groups = () => {\r\n  const groups: GroupLocal[] = useSelector(selectedGroups);\r\n  const {user}: any = useAuth();\r\n  const isAdmin = user.type === \"admin\";\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center h-dvh max-h-dvh justify-between w-full bg-white dark:bg-black\">\r\n      <div className=\"flex flex-col items-center w-full pr-4 pl-4 h-full\">\r\n        <div className=\"flex items-center justify-between w-full\">\r\n          <h1 className=\"pt-4 pb-5 text-lg pl-1 self-start font-semibold text-zinc-900 dark:text-gray-100\">\r\n            Dostępne grupy\r\n          </h1>\r\n          <img src={logo} className=\"w-[30px] pr-2\" />\r\n        </div>\r\n        <div className=\"flex flex-col gap-2 p-1 pt-0 w-full flex-grow overflow-auto h-0\">\r\n          {groups.map((data) => (\r\n            <GroupItem\r\n              {...data}\r\n              isAdmin={isAdmin}\r\n              key={data.id}\r\n              userId={user.uid}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Navigation type=\"Groups\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n"],"names":["GroupItem","_ref","name","users","isAdmin","userId","id","dispatch","useDispatch","navigate","useNavigate","location","useLocation","notify","useNotifications","removeUserFromGroup","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userUid","wrap","_context","prev","next","updateDoc","doc","db","groupId","arrayRemove","status","title","t0","stop","_x","apply","arguments","_jsxs","className","children","_jsx","MdOutlineGroups2","size","Link","to","state","previousLocation","group","groupName","FaPersonCirclePlus","onClick","setGroup","IoCalendarSharp","length","map","_ref3","nick","uid","BsDot","FaMinus","groups","useSelector","selectedGroups","user","useAuth","type","src","logo","data","_createElement","_objectSpread","key","Navigation"],"sourceRoot":""}