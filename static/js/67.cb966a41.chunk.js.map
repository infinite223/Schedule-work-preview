{"version":3,"file":"static/js/67.cb966a41.chunk.js","mappings":"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","sources":["Utilis/helpers.ts","components/BackButton.tsx","pages/Register.tsx"],"sourcesContent":["const minPasswordLength = 5\r\nconst minEmailLength = 2\r\nconst minNameUserLength = 3\r\n\r\n\r\nexport const localVerifyLoginData = (email: string, password: string) => {\r\n    let error = \"\"\r\n    let status = 200\r\n\r\n    if(email.length < minEmailLength) {\r\n        error += \"Email jest zbyt krótki, \"\r\n         status = 400\r\n    }\r\n\r\n    if(password.length < minPasswordLength) {\r\n        error += \"Hasło jest zbyt krótkie\"\r\n         status = 400\r\n    }\r\n\r\n    return { error, status }\r\n}\r\n\r\nexport const localVerifyRegisterData = (email: string, password: string, nameUser: string) => {\r\n    let error = \"\"\r\n    let status = 200\r\n\r\n    if(email.length < minEmailLength) {\r\n        error += \"Email jest zbyt krótki, \"\r\n         status = 400\r\n    }\r\n\r\n    if(password.length < minPasswordLength) {\r\n        error += \"Hasło jest zbyt krótkie\"\r\n         status = 400\r\n    }\r\n\r\n    if(nameUser.length < minNameUserLength) {\r\n        error += \"Nick jest zbyt krótki\"\r\n         status = 400\r\n    }\r\n\r\n    return { error, status }\r\n}\r\n\r\nexport const firebaseHandlingErrors = (notify: any, e: string) => {\r\n    let errorMessage = \"\";\r\n    switch (e) {\r\n        case \"auth/user-disabled\":\r\n        errorMessage = \"Konto użytkownika zostało wyłączone.\";\r\n        break;\r\n        case \"auth/user-not-found\":\r\n        case \"auth/wrong-password\":\r\n        errorMessage = \"Nieprawidłowy adres e-mail lub hasło.\";\r\n        break;\r\n      case \"auth/email-already-in-use\":\r\n        errorMessage = \"Adres e-mail jest już w użyciu.\";\r\n        break;\r\n      case \"auth/invalid-email\":\r\n        errorMessage = \"Nieprawidłowy adres e-mail.\";\r\n        break;\r\n      case \"auth/operation-not-allowed\":\r\n        errorMessage = \"Rejestracja jest obecnie wyłączona.\";\r\n        break;\r\n      case \"auth/weak-password\":\r\n        errorMessage = \"Hasło jest za słabe.\";\r\n        break;\r\n      default:\r\n        errorMessage = \"Wystąpił nieznany błąd rejestracji.\";\r\n    }\r\n    notify({\r\n        message: errorMessage,\r\n        status: \"error\",\r\n        title: \"Błąd logowania\",\r\n    });\r\n}","import {IoChevronBackSharp} from \"react-icons/io5\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport \"../styles/backButtonStyles.scss\";\r\nexport const BackButton = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"backButton\" onClick={() => navigate(-1)}>\r\n      <IoChevronBackSharp size={24} color=\"black\" />\r\n    </div>\r\n  );\r\n};\r\n","import {useState} from \"react\";\r\nimport \"./../styles/loginStyles.scss\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {BackButton} from \"../components/BackButton\";\r\nimport logoApp from \"../assets/logo.png\";\r\nimport {BsPersonAdd} from \"react-icons/bs\";\r\nimport {\r\n  firebaseHandlingErrors,\r\n  localVerifyRegisterData,\r\n} from \"../Utilis/helpers\";\r\nimport {setUpNotifications, useNotifications} from \"reapop\";\r\nimport {createUserWithEmailAndPassword} from \"firebase/auth\";\r\nimport {auth, db} from \"../services/firebaseConfig\";\r\nimport {doc, setDoc} from \"firebase/firestore\";\r\n\r\nsetUpNotifications({\r\n  defaultProps: {\r\n    position: \"bottom-right\",\r\n    dismissAfter: 2000,\r\n    dismissible: true,\r\n  },\r\n});\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nick, setNick] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const {notify} = useNotifications();\r\n\r\n  const tryRegister = async () => {\r\n    const {error, status} = localVerifyRegisterData(email, password, nick);\r\n\r\n    if (status === 200) {\r\n      try {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const createdUserUid = res.user.uid;\r\n        if (res.user) {\r\n          await setDoc(doc(db, \"users\", createdUserUid), {\r\n            nick,\r\n            email,\r\n            uid: createdUserUid,\r\n            type: \"user\",\r\n            groupId: false,\r\n            phonenumber: null,\r\n          });\r\n          navigate(\"/\");\r\n          await notify({\r\n            message: \"Automatyczne logowanie...\",\r\n            status: \"success\",\r\n            title: \"Udało się zarejestrować!\",\r\n          });\r\n        }\r\n      } catch (e: any) {\r\n        firebaseHandlingErrors(notify, e.code);\r\n      }\r\n    } else {\r\n      notify({message: error, status: \"error\", title: \"Błąd rejestracji\"});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <BackButton />\r\n      <BsPersonAdd color=\"var(--baseColor)\" size={44} />\r\n      <img alt=\"logoApp\" className=\"logoApp mt-5\" src={logoApp} />\r\n      <h3>Zarejestruj się do aplikacji</h3>\r\n\r\n      <div className=\"inputsContainer\">\r\n        <input\r\n          placeholder=\"Podaj swój nick\"\r\n          className=\"basicInput\"\r\n          value={nick}\r\n          onChange={(text) => setNick(text.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          placeholder=\"Podaj email\"\r\n          className=\"basicInput\"\r\n          value={email}\r\n          onChange={(text) => setEmail(text.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          placeholder=\"Podaj hasło\"\r\n          className=\"basicInput\"\r\n          value={password}\r\n          onChange={(text) => setPassword(text.target.value)}\r\n          type=\"password\"\r\n          required\r\n        />\r\n\r\n        <button\r\n          onClick={tryRegister}\r\n          className=\"custom-button\"\r\n          style={{\r\n            backgroundColor: \"var(--baseColor)\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            boxShadow: \"0px 2px 5px var(--baseColor)\",\r\n            marginTop: \"10px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            fontSize: \"15px\",\r\n            gap: \"5px\",\r\n          }}\r\n        >\r\n          Zarejestruj się\r\n        </button>\r\n\r\n        <p className=\"footerStart\">\r\n          masz już konto? <Link to={\"/Login\"}>Zaloguj się!</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["localVerifyLoginData","email","password","error","status","length","localVerifyRegisterData","nameUser","firebaseHandlingErrors","notify","e","errorMessage","message","title","BackButton","navigate","useNavigate","_jsx","className","onClick","children","IoChevronBackSharp","size","color","Register","_useState","useState","_useState2","_slicedToArray","setEmail","_useState3","_useState4","setPassword","_useState5","_useState6","nick","setNick","useNotifications","tryRegister","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_localVerifyRegisterD","res","createdUserUid","wrap","_context","prev","next","createUserWithEmailAndPassword","auth","sent","user","uid","setDoc","doc","db","type","groupId","phonenumber","t0","code","stop","apply","arguments","_jsxs","BsPersonAdd","alt","src","logoApp","placeholder","value","onChange","text","target","required","style","backgroundColor","fontWeight","boxShadow","marginTop","display","alignItems","justifyContent","fontSize","gap","Link","to","setUpNotifications","defaultProps","position","dismissAfter","dismissible"],"sourceRoot":""}