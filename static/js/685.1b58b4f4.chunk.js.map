{"version":3,"file":"static/js/685.1b58b4f4.chunk.js","mappings":"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","sources":["Utilis/scheduleFunctions.ts","components/Schedule/CustomCalendar/Day.tsx","components/HoursPrediction.tsx","components/Schedule/CustomCalendar/index.tsx","components/Schedule/SelectedDay.tsx","components/Schedule/index.tsx","components/modals/PromptModal.tsx"],"sourcesContent":["import { formatDateToString } from \"./functions\";\nimport { DayData } from \"./types\";\n\nexport function daysInMonth(selectDate: Date) {\n  const nowYear = selectDate.getFullYear();\n  const nowMoth = selectDate.getMonth() + 1;\n\n  return new Date(nowYear, nowMoth, 0).getDate();\n}\nexport const firstDayOfMonth = (\n  selectDate: Date,\n  data: DayData[],\n  selectedGroupId: string,\n) => {\n  const arr: { id: number; date: Date; users: DayData[]; noDay: boolean }[] = [];\n  const newArr = [];\n  const year = selectDate.getFullYear();\n  const month = selectDate.getMonth();\n\n  const firstDay = new Date(year, month, 0).getDay();\n\n  for (let i = 0; i < firstDay; i++) {\n    arr.push({ id: 0, noDay: true, date: new Date(year+1, month, 0), users: [] });\n  }\n\n  for (let i = 1; i < daysInMonth(selectDate) + 1; i++) {\n    const findDaysInData =  data.filter((days) => formatDateToString(days.date.toDate()) === formatDateToString(new Date(year, month, i)))\n    if(findDaysInData && findDaysInData.length > 0) {\n      let usersInDay = findDaysInData.map((day) =>  { return ( {id: day.id, userUid: day.userUid, groupUid: day.groupUid, block: day?.block, createdAt: day.createdAt, remove: day?.remove, start: day.start, end: day.end, date: day.date} ) })\n      arr.push({ id: i, noDay: false, date: new Date(year, month, i), users: usersInDay })\n    }\n    else {\n      arr.push({ id: i, noDay: false, date: new Date(year, month, i), users: []})\n    }\n  }\n\n  return arr;\n};\n\nexport const e = 2","import {FC} from \"react\";\r\nimport {colors} from \"../../../Utilis/globalStyles\";\r\nimport {DayData, GroupLocal} from \"../../../Utilis/types\";\r\nimport {getColorDot} from \"../../../Utilis/functions\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectedGroup} from \"../../../slices/selectedGroupSlice\";\r\n\r\ninterface DayProps {\r\n  id: number;\r\n  isSelected: boolean;\r\n  users: DayData[];\r\n  myId: string;\r\n  today?: boolean;\r\n}\r\n\r\nconst Day: FC<DayProps> = ({id, isSelected, users, myId, today}) => {\r\n  const group: GroupLocal = useSelector(selectedGroup);\r\n  const findUser = users.find(\r\n    (user: any) => user?.userUid === myId && !user?.remove\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={`rounded-full w-10 h-10 font-bold flex items-center justify-center gap-1 flex-col ${\r\n        today ? \"dark:bg-zinc-800 bg-zinc-200\" : \"\"\r\n      }`}\r\n      style={{\r\n        borderColor: isSelected ? colors.baseColor : \"transparent\",\r\n        borderWidth: 1,\r\n      }}\r\n    >\r\n      <div\r\n        className={`text-[13px] ${\r\n          findUser ? \"text-green-500\" : \"text-gray-700 dark:text-gray-300\"\r\n        }`}\r\n      >\r\n        {id !== 0 && id}\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          gap: 5,\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {users.map(\r\n          (userInDay, id) =>\r\n            !userInDay?.remove &&\r\n            group.users.find((g) => g.uid === userInDay.userUid) &&\r\n            id < 2 && (\r\n              <div\r\n                key={id}\r\n                className=\"rounded-full w-1 h-1\"\r\n                style={{backgroundColor: getColorDot(userInDay)}}\r\n              />\r\n            )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import {FC} from \"react\";\r\nimport {countAllHoursInMonthV2} from \"../Utilis/functions\";\r\nimport {DayData} from \"../Utilis/types\";\r\ninterface HoursPredictionProps {\r\n  userUid: string;\r\n  days: {id: number; date: Date; users: DayData[]; noDay: boolean}[];\r\n}\r\nconst HoursPrediction: FC<HoursPredictionProps> = ({days, userUid}) => {\r\n  const hoursPrediction = countAllHoursInMonthV2(userUid, days);\r\n  return (\r\n    <span className=\"text-green-500 text-sm font-light\">\r\n      {hoursPrediction[userUid]?.hours > 0 && (\r\n        <span>{hoursPrediction[userUid]?.hours} h</span>\r\n      )}\r\n      {hoursPrediction[userUid]?.minutes > 0 && (\r\n        <span> {hoursPrediction[userUid]?.minutes}m</span>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default HoursPrediction;\r\n","import {FC, useEffect, useState} from \"react\";\r\nimport {DateWithUsers, DayData} from \"../../../Utilis/types\";\r\nimport {firstDayOfMonth} from \"../../../Utilis/scheduleFunctions\";\r\nimport Day from \"./Day\";\r\nimport {monthNames, shortDayNames} from \"../../../Utilis/data\";\r\nimport {addMonthsToDate, formatDateToString} from \"../../../Utilis/functions\";\r\nimport {IoChevronBackOutline, IoChevronForwardOutline} from \"react-icons/io5\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setSelectedDayInStore} from \"../../../slices/selectedDaySlice\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport HoursPrediction from \"../../HoursPrediction\";\r\n\r\ninterface CustomCalendarProps {\r\n  selectedDate: DateWithUsers;\r\n  setSelectedDate: (value: DateWithUsers) => void;\r\n  selectedMonth: Date;\r\n  setSelectedMonth: (value: Date) => void;\r\n  data: DayData[];\r\n}\r\nconst nowDate = new Date();\r\nconst CustomCalendar: FC<CustomCalendarProps> = ({\r\n  selectedDate,\r\n  setSelectedDate,\r\n  selectedMonth,\r\n  setSelectedMonth,\r\n  data,\r\n}) => {\r\n  const [days, setDays] = useState<\r\n    {id: number; date: Date; users: DayData[]; noDay: boolean}[]\r\n  >([]);\r\n  const {user}: any = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setSelectedDayInStore(JSON.stringify(nowDate)));\r\n    setDays(firstDayOfMonth(selectedMonth, data, \"1\"));\r\n  }, [selectedMonth, data]);\r\n\r\n  useEffect(() => {\r\n    const selectedDayData = days.find(\r\n      (day) =>\r\n        formatDateToString(day.date) === formatDateToString(selectedDate.date)\r\n    );\r\n    const currentDayData = days.find(\r\n      (day) => formatDateToString(day.date) === formatDateToString(new Date())\r\n    );\r\n    const firstDayInMonthData = days.find(\r\n      (day) =>\r\n        formatDateToString(day.date) === formatDateToString(selectedMonth)\r\n    );\r\n    if (\r\n      firstDayInMonthData &&\r\n      firstDayInMonthData?.date.getMonth() !== nowDate.getMonth()\r\n    ) {\r\n      if (\r\n        selectedDate.date.getMonth() === selectedMonth.getMonth() &&\r\n        selectedDayData\r\n      ) {\r\n        setSelectedDate({\r\n          date: selectedDate.date,\r\n          users: selectedDayData?.users,\r\n        });\r\n        dispatch(setSelectedDayInStore(JSON.stringify(selectedDate.date)));\r\n      } else {\r\n        setSelectedDate({\r\n          date: selectedMonth,\r\n          users: firstDayInMonthData?.users,\r\n        });\r\n        dispatch(setSelectedDayInStore(JSON.stringify(selectedMonth)));\r\n      }\r\n    } else if (selectedDayData) {\r\n      setSelectedDate({date: selectedDate.date, users: selectedDayData?.users});\r\n      dispatch(setSelectedDayInStore(JSON.stringify(selectedDate.date)));\r\n    } else if (currentDayData) {\r\n      setSelectedDate({date: nowDate, users: currentDayData?.users});\r\n    }\r\n  }, [days]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center w-full pt-2 rounded-md mb-2\">\r\n      <div className=\"flex flex-row items-center md:pr-5 md:pl-5 pr-1 pl-1 justify-between pb-2 w-full shadow-sm\">\r\n        <button\r\n          style={{padding: \"2px \"}}\r\n          onClick={() => setSelectedMonth(addMonthsToDate(selectedMonth, -1))}\r\n        >\r\n          <IoChevronBackOutline size={22} color=\"var(--baseColor)\" />\r\n        </button>\r\n        <div className=\"flex items-center gap-3\">\r\n          <HoursPrediction days={days} userUid={user?.uid} />\r\n\r\n          <span className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n            {monthNames[selectedMonth.getMonth()]}\r\n            {\" \" + selectedMonth.getFullYear()}\r\n          </span>\r\n        </div>\r\n        <button\r\n          style={{padding: \"2px\"}}\r\n          onClick={() => setSelectedMonth(addMonthsToDate(selectedMonth, 1))}\r\n        >\r\n          <IoChevronForwardOutline size={22} color=\"var(--baseColor)\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"w-full rounded-lg pt-4\">\r\n        <div className=\"grid grid-cols-7 gap-2 mb-2 text-gray-500 dark:text-gray-400\">\r\n          {shortDayNames.map((item, index) => (\r\n            <span\r\n              key={index}\r\n              className=\"w-full flex justify-center text-xs font-light\"\r\n            >\r\n              {item}\r\n            </span>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-7 gap-2 pt2 pb-2\">\r\n          {days.map((item, index) => {\r\n            const isSelected =\r\n              formatDateToString(new Date(item.date)) ===\r\n              formatDateToString(new Date(selectedDate.date));\r\n            const disableDay = item.noDay;\r\n            return (\r\n              <button\r\n                disabled={disableDay}\r\n                key={index}\r\n                className=\"w-full flex items-center justify-center\"\r\n                onClick={() => {\r\n                  setSelectedDate({date: item.date, users: item.users});\r\n                  dispatch(setSelectedDayInStore(JSON.stringify(item.date)));\r\n                }}\r\n              >\r\n                <Day\r\n                  id={item.id}\r\n                  isSelected={isSelected}\r\n                  users={item.users}\r\n                  myId={user.uid}\r\n                  today={\r\n                    formatDateToString(new Date()) ===\r\n                    formatDateToString(item.date)\r\n                  }\r\n                />\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCalendar;\r\n","import {FC, useEffect, useState} from \"react\";\r\nimport {DateWithUsers, GroupLocal} from \"../../Utilis/types\";\r\nimport {shortDayNames} from \"../../Utilis/data\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectedGroup} from \"../../slices/selectedGroupSlice\";\r\nimport {formatDateToString, getColorDot} from \"../../Utilis/functions\";\r\nimport {selectRefreshSelectedDay} from \"../../slices/refreshSelectedDaySlice\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport {doc, updateDoc} from \"firebase/firestore\";\r\nimport {db} from \"../../services/firebaseConfig\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useNotifications} from \"reapop\";\r\nimport {setReadsCounter} from \"../../slices/readsCounterSlice\";\r\nimport {FaLockOpen, FaUserLock} from \"react-icons/fa\";\r\n\r\ninterface SelectedDateProps {\r\n  selectedDate: DateWithUsers;\r\n}\r\n\r\nconst SelectedDay: FC<SelectedDateProps> = ({selectedDate}) => {\r\n  const navigate = useNavigate();\r\n  const {notify} = useNotifications();\r\n  const group: GroupLocal = useSelector(selectedGroup);\r\n  const dispatch = useDispatch();\r\n  const [usersInDay, setUsersInDay] = useState<any>([]);\r\n  const refreshSelectedDay = useSelector(selectRefreshSelectedDay);\r\n  const {user}: any = useAuth();\r\n  const isAdmin = user?.type === \"admin\";\r\n\r\n  useEffect(() => {\r\n    setUsersInDay(\r\n      selectedDate.users.map((user) => {\r\n        const findUser = group.users.find((u) => u.uid === user.userUid);\r\n\r\n        if (findUser) {\r\n          return {\r\n            date: user.date,\r\n            start: user.start,\r\n            end: user.end,\r\n            user: findUser,\r\n            createdAt: user.createdAt,\r\n            remove: user?.remove,\r\n            block: user?.block,\r\n            id: user?.id,\r\n          };\r\n        }\r\n      })\r\n    );\r\n  }, [selectedDate, refreshSelectedDay]);\r\n\r\n  const blockUserInDay = async (userInDay: any, type: boolean) => {\r\n    if (user && isAdmin && userInDay.id) {\r\n      try {\r\n        await updateDoc(doc(db, \"schedule\", userInDay.id), {\r\n          block: type,\r\n          remove: type,\r\n        });\r\n        navigate(\"/\");\r\n\r\n        notify({\r\n          status: \"success\",\r\n          title: type ? \"Zablokowano \" : \"Odblokowano\" + userInDay.user.nick,\r\n        });\r\n      } catch (error) {\r\n        notify({\r\n          status: \"error\",\r\n          title: \"Coś poszło nie tak, spróbuj od nowa załadować aplikacje\",\r\n        });\r\n      }\r\n\r\n      dispatch(setReadsCounter(1));\r\n    } else {\r\n      notify({\r\n        status: \"error\",\r\n        title: \"Coś poszło nie tak\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex text-black dark:text-white p-2 w-full h-fit\">\r\n      <div className=\"border-r-2 border-green-500 p-2 pr-5 pl-3 flex flex-col\">\r\n        <span className=\"font-bold text-[16px]\">\r\n          {selectedDate.date.getDate()}\r\n        </span>\r\n        <span className=\"font-light text-sm\">\r\n          {\r\n            shortDayNames[\r\n              selectedDate.date.getDay() ? selectedDate.date.getDay() - 1 : 6\r\n            ]\r\n          }\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col pl-4 pr-2 w-full flex-grow overflow-auto\">\r\n        {usersInDay.map((item: any, id: string) => (\r\n          <div key={id}>\r\n            {item?.user && item?.end && item?.start && item?.createdAt ? (\r\n              <div\r\n                key={id}\r\n                className={`flex flex-col text-black dark:text-zinc-100 p-1 w-full justify-between \r\n            border-b-2 border-zinc-200 dark:border-zinc-900`}\r\n                style={item?.remove ? {opacity: 0.3} : {}}\r\n              >\r\n                <div className=\"flex items-center justify-between w-full text-sm\">\r\n                  <div\r\n                    className={\r\n                      item?.user?.uid === user.uid ? `text-green-500` : \"\"\r\n                    }\r\n                  >\r\n                    {item?.user?.nick}\r\n                  </div>\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <div\r\n                      className={`flex gap-4 items-center text-black dark:text-zinc-200`}\r\n                      style={{color: getColorDot(item)}}\r\n                    >\r\n                      <div className=\"\">od: {item?.start}</div>\r\n                      <div>do: {item?.end}</div>\r\n                    </div>\r\n                    {isAdmin &&\r\n                      item.user.uid !== user.uid &&\r\n                      (item?.block ? (\r\n                        <FaUserLock\r\n                          onClick={() => blockUserInDay(item, false)}\r\n                          className=\"text-zinc-800 dark:text-zinc-100 cursor-pointer hover:text-green-600 transition-colors\"\r\n                          size={16}\r\n                        />\r\n                      ) : (\r\n                        <FaLockOpen\r\n                          onClick={() => blockUserInDay(item, true)}\r\n                          className=\"text-zinc-800 dark:text-zinc-100 cursor-pointer hover:text-red-600 transition-colors\"\r\n                          size={16}\r\n                        />\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex pt-1 text-zinc-400\">\r\n                  <div className=\"text-[10px]\">\r\n                    Dodano:{\" \"}\r\n                    {formatDateToString(\r\n                      new Date(item?.createdAt?.seconds * 1000)\r\n                    )}{\" \"}\r\n                    o {new Date(item?.createdAt?.seconds * 1000).getHours()}:\r\n                    {new Date(item?.createdAt?.seconds * 1000).getMinutes()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedDay;\r\n","import {useEffect, useState} from \"react\";\r\nimport CustomCalendar from \"./CustomCalendar\";\r\nimport {DateWithUsers, DayData} from \"../../Utilis/types\";\r\nimport Navigation from \"../../navigation\";\r\nimport SelectedDay from \"./SelectedDay\";\r\nimport {\r\n  DocumentData,\r\n  DocumentReference,\r\n  collection,\r\n  deleteDoc,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport {db} from \"../../services/firebaseConfig\";\r\nimport {addMonthsToDate, formatDateToString} from \"../../Utilis/functions\";\r\nimport Loading from \"../Loading\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setReadsCounter} from \"../../slices/readsCounterSlice\";\r\nimport {selectedGroup} from \"../../slices/selectedGroupSlice\";\r\nimport {setRefreshSelectedDay} from \"../../slices/refreshSelectedDaySlice\";\r\nimport logo from \"../../assets/calendar.png\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport {useNotifications} from \"reapop\";\r\nimport {PromptModal} from \"../modals/PromptModal\";\r\n\r\nconst Schedule = () => {\r\n  const dispatch = useDispatch();\r\n  const group = useSelector(selectedGroup);\r\n  const [showPromptModal, setShowPromptModal] = useState(false);\r\n  const [scheduleDays, setScheduleDays] = useState<DayData[]>([]);\r\n  const [scheduleDaysRefs, setScheduleDaysRefs] = useState<\r\n    DocumentReference<DocumentData, DocumentData>[]\r\n  >([]);\r\n  const {user}: any = useAuth();\r\n  const isAdmin = user?.type === \"admin\";\r\n  const {notify} = useNotifications();\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState<DateWithUsers>({\r\n    date: new Date(\r\n      new Date().getFullYear(),\r\n      new Date().getMonth(),\r\n      new Date().getDate()\r\n    ),\r\n    users: [],\r\n  });\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState(\r\n    new Date(new Date().getFullYear(), new Date().getMonth(), 1)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (group && group?.id) {\r\n      setLoading(true);\r\n      const schedulesRef = collection(db, \"schedule\");\r\n\r\n      const start = new Date(\r\n        selectedMonth.getFullYear(),\r\n        selectedMonth.getMonth(),\r\n        1\r\n      );\r\n      const end = addMonthsToDate(start, 1);\r\n\r\n      const scheduleQuery = query(\r\n        schedulesRef,\r\n        where(\"date\", \">=\", start),\r\n        where(\"date\", \"<\", end),\r\n        where(\"groupUid\", \"==\", group.id)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(scheduleQuery, async (snapchot) => {\r\n        setScheduleDays(\r\n          snapchot.docs.map((doc: any, i) => {\r\n            return {...doc.data(), id: doc.id};\r\n          })\r\n        );\r\n        setScheduleDaysRefs(\r\n          snapchot.docs.map((doc, i) => {\r\n            return doc.ref;\r\n          })\r\n        );\r\n        dispatch(setReadsCounter(1));\r\n\r\n        setLoading(false);\r\n      });\r\n\r\n      dispatch(setRefreshSelectedDay(1));\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }\r\n  }, [selectedMonth, group]);\r\n\r\n  const operationType = scheduleDays.find(\r\n    (day) =>\r\n      formatDateToString(day.date.toDate()) ===\r\n        formatDateToString(selectedDate?.date) &&\r\n      !day?.remove &&\r\n      day.userUid === user.uid\r\n  )\r\n    ? \"minus\"\r\n    : \"plus\";\r\n\r\n  const isBlocked = scheduleDays.find(\r\n    (day) =>\r\n      formatDateToString(day.date.toDate()) ===\r\n        formatDateToString(selectedDate?.date) &&\r\n      day.userUid === user.uid &&\r\n      day.block\r\n  )\r\n    ? true\r\n    : false;\r\n\r\n  const tryClearMonth = () => {\r\n    try {\r\n      scheduleDaysRefs.forEach(async (scheduleDayRef) => {\r\n        await deleteDoc(scheduleDayRef);\r\n      });\r\n\r\n      notify({\r\n        status: \"success\",\r\n        title: \"Udało się wyczyścić miesiąc.\",\r\n      });\r\n\r\n      setShowPromptModal(false);\r\n    } catch (error) {\r\n      notify({\r\n        status: \"error\",\r\n        title: \"Coś poszło nie tak, spróbuj później.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center  h-screen max-h-dvh  justify-between w-ful bg-white dark:bg-black\">\r\n      <div className=\"flex sm:flex-row flex-col w-full sm:flex-ro\">\r\n        <div className=\"flex flex-col sm:w-1/2 items-center w-full pr-2 pl-2 border-b-2 sm:border-b-0 sm:border-r-2 border-gray-400/10 rounded-b-xl pb-2\">\r\n          <div className=\"flex items-center justify-between w-full\">\r\n            <h1 className=\"pt-4 pb-3 text-lg pl-2 self-start font-semibold text-zinc-900 dark:text-gray-100\">\r\n              {group?.name ? group?.name : \"Brak grupy\"}\r\n            </h1>\r\n            {isAdmin && (\r\n              <div\r\n                onClick={() => setShowPromptModal(true)}\r\n                className=\"p-1 pl-3 pr-3 bg-zinc-200 dark:bg-zinc-600 rounded-md text-zinc-700 dark:text-white text-xs cursor-pointer transition-opacity hover:opacity-75\"\r\n              >\r\n                Wyczyść miesiąc\r\n              </div>\r\n            )}\r\n            <img src={logo} alt=\"logo\" className=\"w-[30px] pr-2\" />\r\n          </div>\r\n          <CustomCalendar\r\n            selectedDate={selectedDate}\r\n            setSelectedDate={setSelectedDate}\r\n            selectedMonth={selectedMonth}\r\n            setSelectedMonth={setSelectedMonth}\r\n            data={scheduleDays}\r\n          />\r\n        </div>\r\n        <SelectedDay selectedDate={selectedDate} />\r\n      </div>\r\n\r\n      <Navigation\r\n        type=\"Schedule\"\r\n        operation={operationType}\r\n        blocked={isBlocked}\r\n        dayId={selectedDate.users.find((u) => u.userUid === user.uid)?.id}\r\n      />\r\n      {loading && <Loading />}\r\n\r\n      {showPromptModal && (\r\n        <PromptModal\r\n          actions={() => (\r\n            <div className=\"flex items-center gap-3\">\r\n              <button\r\n                className=\"button bg-zinc-700-600 text-zinc-700 dark:text-white font-bold hover:opacity-80 transition-opacity p-1.5 rounded-md text-sm\"\r\n                onClick={() => setShowPromptModal(false)}\r\n              >\r\n                Wyjdź\r\n              </button>\r\n              <button\r\n                className=\"button bg-red-600 text-white pl-3 pr-3 font-bold hover:opacity-80 transition-opacity p-1.5 rounded-md text-sm\"\r\n                onClick={tryClearMonth}\r\n              >\r\n                Wyczyść dane\r\n              </button>\r\n            </div>\r\n          )}\r\n          setShowPromptModal={setShowPromptModal}\r\n          text=\"Czy na pewno chcesz wyczyścić grafik w tym miesiącu?\"\r\n          title=\"Zatwierdź opcje\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n","import {FC} from \"react\";\r\n\r\ninterface PromptModalProps {\r\n  actions: () => JSX.Element;\r\n  text: string;\r\n  title: string;\r\n  setShowPromptModal: (value: boolean) => void;\r\n}\r\n\r\nexport const PromptModal: FC<PromptModalProps> = ({\r\n  actions,\r\n  text,\r\n  title,\r\n  setShowPromptModal,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"fixed bg-white/65 dark:bg-black/65 left-0 top-0 h-dvh w-screen flex flex-col items-center justify-center\"\r\n      onClick={(e) => setShowPromptModal(false)}\r\n    >\r\n      <div\r\n        className=\"h-fit w-11/12 sm:w-1/3 gap-2 min-w-3.5 flex flex-col justify-between text-black dark:text-white bg-zinc-100 dark:bg-zinc-900 p-5 rounded-md\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <h2>{title}</h2>\r\n\r\n        <p className=\"text-sm mb-2\">{text}</p>\r\n        {actions()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["daysInMonth","selectDate","nowYear","getFullYear","nowMoth","getMonth","Date","getDate","_ref","id","isSelected","users","myId","today","group","useSelector","selectedGroup","findUser","find","user","userUid","remove","_jsxs","className","concat","style","borderColor","colors","baseColor","borderWidth","children","_jsx","flexDirection","alignItems","gap","display","map","userInDay","g","uid","backgroundColor","getColorDot","_hoursPrediction$user","_hoursPrediction$user2","_hoursPrediction$user3","_hoursPrediction$user4","days","hoursPrediction","countAllHoursInMonthV2","hours","minutes","nowDate","selectedDate","setSelectedDate","selectedMonth","setSelectedMonth","data","_useState","useState","_useState2","_slicedToArray","setDays","useAuth","dispatch","useDispatch","useEffect","setSelectedDayInStore","JSON","stringify","selectedGroupId","arr","year","month","firstDay","getDay","i","push","noDay","date","_loop","_i","findDaysInData","filter","formatDateToString","toDate","length","usersInDay","day","groupUid","block","createdAt","start","end","firstDayOfMonth","selectedDayData","currentDayData","firstDayInMonthData","padding","onClick","addMonthsToDate","IoChevronBackOutline","size","color","HoursPrediction","monthNames","IoChevronForwardOutline","shortDayNames","item","index","disableDay","disabled","Day","navigate","useNavigate","notify","useNotifications","setUsersInDay","refreshSelectedDay","selectRefreshSelectedDay","isAdmin","type","u","blockUserInDay","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","updateDoc","doc","db","status","title","nick","t0","setReadsCounter","stop","_x","_x2","apply","arguments","_item$user","_item$user2","_item$createdAt","_item$createdAt2","_item$createdAt3","opacity","FaUserLock","FaLockOpen","seconds","getHours","getMinutes","_Fragment","_selectedDate$users$f","showPromptModal","setShowPromptModal","_useState3","_useState4","scheduleDays","setScheduleDays","_useState5","_useState6","scheduleDaysRefs","setScheduleDaysRefs","_useState7","_useState8","loading","setLoading","_useState9","_useState10","_useState11","_useState12","schedulesRef","collection","scheduleQuery","query","where","unsubscribe","onSnapshot","snapchot","docs","_objectSpread","ref","setRefreshSelectedDay","operationType","isBlocked","tryClearMonth","forEach","_callee2","scheduleDayRef","_context2","deleteDoc","error","name","src","logo","alt","CustomCalendar","SelectedDay","Navigation","operation","blocked","dayId","Loading","PromptModal","actions","text","e","stopPropagation"],"sourceRoot":""}